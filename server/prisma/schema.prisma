// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               String      @id @default(uuid())
  name             String
  email            String      @unique
  password         String
  phone            String
  otpCode          String
  isActive         Boolean     @default(false)
  resetToken       String?
  resetTokenExpiry DateTime?
  UserSalon        UserSalon[]

  @@map("users")
}

model Salon {
  id             String         @id @default(uuid())
  companyName    String
  document       String
  description    String
  targetAudience String
  latitude       Float
  longitude      Float
  UserSalon      UserSalon[]
  OpeningHour    OpeningHour[]
  SalonSegment   SalonSegment[]
  SocialMedia    SocialMedia[]

  @@map("salons")
}

model UserSalon {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @unique
  salon      Salon    @relation(fields: [salonId], references: [id])
  salonId    String   @unique
  updateDate DateTime

  @@map("userssalons")
}

model Segment {
  id           String         @id @default(uuid())
  name         String
  SalonSegment SalonSegment[]

  @@map("segments")
}

model SalonSegment {
  id        String  @id @default(uuid())
  segment   Segment @relation(fields: [segmentId], references: [id])
  segmentId String
  salon     Salon   @relation(fields: [salonId], references: [id])
  salonId   String

  @@map("salonsegments")
}

model SocialMedia {
  id          String @id @default(uuid())
  url         String
  socialMedia String
  salon       Salon  @relation(fields: [salonId], references: [id])
  salonId     String

  @@map("socialmedias")
}

model OpeningHour {
  id        String @id @default(uuid())
  weekDay   String
  startTime String
  endTime   String
  salon     Salon  @relation(fields: [salonId], references: [id])
  salonId   String

  @@map("openinghours")
}

model Product {
  id   String @id @default(uuid())
  name String

  @@map("products")
}
